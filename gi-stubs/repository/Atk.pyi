from gi.repository import GObject

BINARY_AGE: int = ...
INTERFACE_AGE: int = ...
MAJOR_VERSION: int = ...
MICRO_VERSION = ...
MINOR_VERSION: int = ...
VERSION_MIN_REQUIRED: int = ...
_namespace: str = ...
_version: str = ...

def attribute_set_free(*args, **kwargs): ...
def focus_tracker_notify(*args, **kwargs): ...
def get_binary_age(*args, **kwargs): ...
def get_default_registry(*args, **kwargs): ...
def get_focus_object(*args, **kwargs): ...
def get_interface_age(*args, **kwargs): ...
def get_major_version(*args, **kwargs): ...
def get_micro_version(*args, **kwargs): ...
def get_minor_version(*args, **kwargs): ...
def get_root(*args, **kwargs): ...
def get_toolkit_name(*args, **kwargs): ...
def get_toolkit_version(*args, **kwargs): ...
def get_version(*args, **kwargs): ...
def relation_type_for_name(*args, **kwargs): ...
def relation_type_get_name(*args, **kwargs): ...
def relation_type_register(*args, **kwargs): ...
def remove_focus_tracker(*args, **kwargs): ...
def remove_global_event_listener(*args, **kwargs): ...
def remove_key_event_listener(*args, **kwargs): ...
def role_for_name(*args, **kwargs): ...
def role_get_localized_name(*args, **kwargs): ...
def role_get_name(*args, **kwargs): ...
def role_register(*args, **kwargs): ...
def state_type_for_name(*args, **kwargs): ...
def state_type_get_name(*args, **kwargs): ...
def state_type_register(*args, **kwargs): ...
def text_attribute_for_name(*args, **kwargs): ...
def text_attribute_get_name(*args, **kwargs): ...
def text_attribute_get_value(*args, **kwargs): ...
def text_attribute_register(*args, **kwargs): ...
def text_free_ranges(*args, **kwargs): ...
def value_type_get_localized_name(*args, **kwargs): ...
def value_type_get_name(*args, **kwargs): ...

class Action:
    def do_action(*args, **kwargs): ...
    def get_description(*args, **kwargs): ...
    def get_keybinding(*args, **kwargs): ...
    def get_localized_name(*args, **kwargs): ...
    def get_n_actions(*args, **kwargs): ...
    def get_name(*args, **kwargs): ...
    def set_description(*args, **kwargs): ...

class Attribute:
    name = ...
    value = ...

    def set_free(*args, **kwargs): ...

class Component:
    def contains(*args, **kwargs): ...
    def get_alpha(*args, **kwargs): ...
    def get_extents(*args, **kwargs): ...
    def get_layer(*args, **kwargs): ...
    def get_mdi_zorder(*args, **kwargs): ...
    def get_position(*args, **kwargs): ...
    def get_size(*args, **kwargs): ...
    def grab_focus(*args, **kwargs): ...
    def ref_accessible_at_point(*args, **kwargs): ...
    def remove_focus_handler(*args, **kwargs): ...
    def scroll_to(*args, **kwargs): ...
    def scroll_to_point(*args, **kwargs): ...
    def set_extents(*args, **kwargs): ...
    def set_position(*args, **kwargs): ...
    def set_size(*args, **kwargs): ...

class Document:
    def get_attribute_value(*args, **kwargs): ...
    def get_attributes(*args, **kwargs): ...
    def get_current_page_number(*args, **kwargs): ...
    def get_document(*args, **kwargs): ...
    def get_document_type(*args, **kwargs): ...
    def get_locale(*args, **kwargs): ...
    def get_page_count(*args, **kwargs): ...
    def set_attribute_value(*args, **kwargs): ...

class EditableText:
    def copy_text(*args, **kwargs): ...
    def cut_text(*args, **kwargs): ...
    def delete_text(*args, **kwargs): ...
    def insert_text(*args, **kwargs): ...
    def paste_text(*args, **kwargs): ...
    def set_run_attributes(*args, **kwargs): ...
    def set_text_contents(*args, **kwargs): ...

class Hyperlink:
    parent = ...

    def get_end_index(*args, **kwargs): ...
    def get_n_anchors(*args, **kwargs): ...
    def get_object(*args, **kwargs): ...
    def get_start_index(*args, **kwargs): ...
    def get_uri(*args, **kwargs): ...
    def is_inline(*args, **kwargs): ...
    def is_selected_link(*args, **kwargs): ...
    def is_valid(*args, **kwargs): ...
    def do_get_end_index(self, *args, **kwargs): ...
    def do_get_n_anchors(self, *args, **kwargs): ...
    def do_get_object(self, *args, **kwargs): ...
    def do_get_start_index(self, *args, **kwargs): ...
    def do_get_uri(self, *args, **kwargs): ...
    def do_is_selected_link(self, *args, **kwargs): ...
    def do_is_valid(self, *args, **kwargs): ...
    def do_link_activated(self, *args, **kwargs): ...
    def do_link_state(self, *args, **kwargs): ...

class HyperlinkImpl:
    def get_hyperlink(*args, **kwargs): ...

class Hypertext:
    def get_link(*args, **kwargs): ...
    def get_link_index(*args, **kwargs): ...
    def get_n_links(*args, **kwargs): ...

class Image:
    def get_image_description(*args, **kwargs): ...
    def get_image_locale(*args, **kwargs): ...
    def get_image_position(*args, **kwargs): ...
    def get_image_size(*args, **kwargs): ...
    def set_image_description(*args, **kwargs): ...

class Implementor:
    def ref_accessible(*args, **kwargs): ...

class KeyEventStruct:
    keycode = ...
    keyval = ...
    length = ...
    state = ...
    string = ...
    timestamp = ...
    type = ...

class Misc:
    parent = ...

    def get_instance(*args, **kwargs): ...
    def threads_enter(*args, **kwargs): ...
    def threads_leave(*args, **kwargs): ...
    def do_threads_enter(self, *args, **kwargs): ...
    def do_threads_leave(self, *args, **kwargs): ...

class NoOpObject:
    def new(*args, **kwargs): ...

class NoOpObjectFactory:
    def new(*args, **kwargs): ...

class Object(GObject.Object):
    accessible_parent = ...
    description = ...
    layer = ...
    name = ...
    parent = ...
    relation_set = ...
    role = ...

    def add_relationship(*args, **kwargs): ...
    def get_accessible_id(*args, **kwargs): ...
    def get_attributes(*args, **kwargs): ...
    def get_description(*args, **kwargs): ...
    def get_index_in_parent(*args, **kwargs): ...
    def get_layer(*args, **kwargs): ...
    def get_mdi_zorder(*args, **kwargs): ...
    def get_n_accessible_children(*args, **kwargs): ...
    def get_name(*args, **kwargs): ...
    def get_object_locale(*args, **kwargs): ...
    def get_parent(*args, **kwargs): ...
    def get_role(*args, **kwargs): ...
    def initialize(*args, **kwargs): ...
    def notify_state_change(*args, **kwargs): ...
    def peek_parent(*args, **kwargs): ...
    def ref_accessible_child(*args, **kwargs): ...
    def ref_relation_set(*args, **kwargs): ...
    def ref_state_set(*args, **kwargs): ...
    def remove_property_change_handler(*args, **kwargs): ...
    def remove_relationship(*args, **kwargs): ...
    def set_accessible_id(*args, **kwargs): ...
    def set_description(*args, **kwargs): ...
    def set_name(*args, **kwargs): ...
    def set_parent(*args, **kwargs): ...
    def set_role(*args, **kwargs): ...
    def do_active_descendant_changed(self, *args, **kwargs): ...
    def do_children_changed(self, *args, **kwargs): ...
    def do_focus_event(self, *args, **kwargs): ...
    def do_get_attributes(self, *args, **kwargs): ...
    def do_get_description(self, *args, **kwargs): ...
    def do_get_index_in_parent(self, *args, **kwargs): ...
    def do_get_layer(self, *args, **kwargs): ...
    def do_get_mdi_zorder(self, *args, **kwargs): ...
    def do_get_n_children(self, *args, **kwargs): ...
    def do_get_name(self, *args, **kwargs): ...
    def do_get_object_locale(self, *args, **kwargs): ...
    def do_get_parent(self, *args, **kwargs): ...
    def do_get_role(self, *args, **kwargs): ...
    def do_initialize(self, *args, **kwargs): ...
    def do_property_change(self, *args, **kwargs): ...
    def do_ref_relation_set(self, *args, **kwargs): ...
    def do_ref_state_set(self, *args, **kwargs): ...
    def do_remove_property_change_handler(self, *args, **kwargs): ...
    def do_set_description(self, *args, **kwargs): ...
    def do_set_name(self, *args, **kwargs): ...
    def do_set_parent(self, *args, **kwargs): ...
    def do_set_role(self, *args, **kwargs): ...
    def do_state_change(self, *args, **kwargs): ...
    def do_visible_data_changed(self, *args, **kwargs): ...

class ObjectFactory:
    parent = ...

    def create_accessible(*args, **kwargs): ...
    def get_accessible_type(*args, **kwargs): ...
    def invalidate(*args, **kwargs): ...
    def do_invalidate(self, *args, **kwargs): ...

class Plug:
    def get_id(*args, **kwargs): ...
    def new(*args, **kwargs): ...
    def set_child(*args, **kwargs): ...
    def do_get_object_id(self, *args, **kwargs): ...

class PropertyValues:
    new_value = ...
    old_value = ...
    property_name = ...

class Range:
    def free(*args, **kwargs): ...
    def get_description(*args, **kwargs): ...
    def get_lower_limit(*args, **kwargs): ...
    def get_upper_limit(*args, **kwargs): ...
    def new(*args, **kwargs): ...

class Rectangle:
    height = ...
    width = ...
    x = ...
    y = ...

class Registry:
    factory_singleton_cache = ...
    factory_type_registry = ...
    parent = ...

    def get_factory(*args, **kwargs): ...
    def get_factory_type(*args, **kwargs): ...
    def set_factory_type(*args, **kwargs): ...

class Relation:
    parent = ...
    relationship = ...
    target = ...

    def add_target(*args, **kwargs): ...
    def get_relation_type(*args, **kwargs): ...
    def get_target(*args, **kwargs): ...
    def new(*args, **kwargs): ...
    def remove_target(*args, **kwargs): ...

class RelationSet:
    parent = ...
    relations = ...

    def add(*args, **kwargs): ...
    def add_relation_by_type(*args, **kwargs): ...
    def contains(*args, **kwargs): ...
    def contains_target(*args, **kwargs): ...
    def get_n_relations(*args, **kwargs): ...
    def get_relation(*args, **kwargs): ...
    def get_relation_by_type(*args, **kwargs): ...
    def new(*args, **kwargs): ...
    def remove(*args, **kwargs): ...

class Selection:
    def add_selection(*args, **kwargs): ...
    def clear_selection(*args, **kwargs): ...
    def get_selection_count(*args, **kwargs): ...
    def is_child_selected(*args, **kwargs): ...
    def ref_selection(*args, **kwargs): ...
    def remove_selection(*args, **kwargs): ...
    def select_all_selection(*args, **kwargs): ...

class Socket:
    embedded_plug_id = ...

    def embed(*args, **kwargs): ...
    def is_occupied(*args, **kwargs): ...
    def new(*args, **kwargs): ...
    def do_embed(self, *args, **kwargs): ...

class StateSet:
    parent = ...

    def add_state(*args, **kwargs): ...
    def add_states(*args, **kwargs): ...
    def and_sets(*args, **kwargs): ...
    def clear_states(*args, **kwargs): ...
    def contains_state(*args, **kwargs): ...
    def contains_states(*args, **kwargs): ...
    def is_empty(*args, **kwargs): ...
    def new(*args, **kwargs): ...
    def or_sets(*args, **kwargs): ...
    def remove_state(*args, **kwargs): ...
    def xor_sets(*args, **kwargs): ...

class StreamableContent:
    def get_mime_type(*args, **kwargs): ...
    def get_n_mime_types(*args, **kwargs): ...
    def get_stream(*args, **kwargs): ...
    def get_uri(*args, **kwargs): ...

class Table:
    def add_column_selection(*args, **kwargs): ...
    def add_row_selection(*args, **kwargs): ...
    def get_caption(*args, **kwargs): ...
    def get_column_at_index(*args, **kwargs): ...
    def get_column_description(*args, **kwargs): ...
    def get_column_extent_at(*args, **kwargs): ...
    def get_column_header(*args, **kwargs): ...
    def get_index_at(*args, **kwargs): ...
    def get_n_columns(*args, **kwargs): ...
    def get_n_rows(*args, **kwargs): ...
    def get_row_at_index(*args, **kwargs): ...
    def get_row_description(*args, **kwargs): ...
    def get_row_extent_at(*args, **kwargs): ...
    def get_row_header(*args, **kwargs): ...
    def get_selected_columns(*args, **kwargs): ...
    def get_selected_rows(*args, **kwargs): ...
    def get_summary(*args, **kwargs): ...
    def is_column_selected(*args, **kwargs): ...
    def is_row_selected(*args, **kwargs): ...
    def is_selected(*args, **kwargs): ...
    def ref_at(*args, **kwargs): ...
    def remove_column_selection(*args, **kwargs): ...
    def remove_row_selection(*args, **kwargs): ...
    def set_caption(*args, **kwargs): ...
    def set_column_description(*args, **kwargs): ...
    def set_column_header(*args, **kwargs): ...
    def set_row_description(*args, **kwargs): ...
    def set_row_header(*args, **kwargs): ...
    def set_summary(*args, **kwargs): ...

class TableCell:
    def get_column_header_cells(*args, **kwargs): ...
    def get_column_span(*args, **kwargs): ...
    def get_position(*args, **kwargs): ...
    def get_row_column_span(*args, **kwargs): ...
    def get_row_header_cells(*args, **kwargs): ...
    def get_row_span(*args, **kwargs): ...
    def get_table(*args, **kwargs): ...

class Text:
    def add_selection(*args, **kwargs): ...
    def free_ranges(*args, **kwargs): ...
    def get_bounded_ranges(*args, **kwargs): ...
    def get_caret_offset(*args, **kwargs): ...
    def get_character_at_offset(*args, **kwargs): ...
    def get_character_count(*args, **kwargs): ...
    def get_character_extents(*args, **kwargs): ...
    def get_default_attributes(*args, **kwargs): ...
    def get_n_selections(*args, **kwargs): ...
    def get_offset_at_point(*args, **kwargs): ...
    def get_range_extents(*args, **kwargs): ...
    def get_run_attributes(*args, **kwargs): ...
    def get_selection(*args, **kwargs): ...
    def get_string_at_offset(*args, **kwargs): ...
    def get_text(*args, **kwargs): ...
    def get_text_after_offset(*args, **kwargs): ...
    def get_text_at_offset(*args, **kwargs): ...
    def get_text_before_offset(*args, **kwargs): ...
    def remove_selection(*args, **kwargs): ...
    def scroll_substring_to(*args, **kwargs): ...
    def scroll_substring_to_point(*args, **kwargs): ...
    def set_caret_offset(*args, **kwargs): ...
    def set_selection(*args, **kwargs): ...

class TextRange:
    bounds = ...
    content = ...
    end_offset = ...
    start_offset = ...

class TextRectangle:
    height = ...
    width = ...
    x = ...
    y = ...

class Util:
    parent = ...

class Value:
    def get_current_value(*args, **kwargs): ...
    def get_increment(*args, **kwargs): ...
    def get_maximum_value(*args, **kwargs): ...
    def get_minimum_increment(*args, **kwargs): ...
    def get_minimum_value(*args, **kwargs): ...
    def get_range(*args, **kwargs): ...
    def get_sub_ranges(*args, **kwargs): ...
    def get_value_and_text(*args, **kwargs): ...
    def set_current_value(*args, **kwargs): ...
    def set_value(*args, **kwargs): ...

class Window: ...

class HyperlinkStateFlags(GObject.GFlags):
    INLINE = ...

class CoordType(GObject.GEnum):
    SCREEN = ...
    WINDOW = ...
    PARENT = ...

class KeyEventType(GObject.GEnum):
    PRESS = ...
    RELEASE = ...
    LAST_DEFINED = ...

class Layer(GObject.GEnum):
    INVALID = ...
    BACKGROUND = ...
    CANVAS = ...
    WIDGET = ...
    MDI = ...
    POPUP = ...
    OVERLAY = ...
    WINDOW = ...

class RelationType(GObject.GEnum):
    NULL = ...
    CONTROLLED_BY = ...
    CONTROLLER_FOR = ...
    LABEL_FOR = ...
    LABELLED_BY = ...
    MEMBER_OF = ...
    NODE_CHILD_OF = ...
    FLOWS_TO = ...
    FLOWS_FROM = ...
    SUBWINDOW_OF = ...
    EMBEDS = ...
    EMBEDDED_BY = ...
    POPUP_FOR = ...
    PARENT_WINDOW_OF = ...
    DESCRIBED_BY = ...
    DESCRIPTION_FOR = ...
    NODE_PARENT_OF = ...
    DETAILS = ...
    DETAILS_FOR = ...
    ERROR_MESSAGE = ...
    ERROR_FOR = ...
    LAST_DEFINED = ...
    for_name = ...
    get_name = ...
    register = ...

class Role(GObject.GEnum):
    INVALID = ...
    ACCELERATOR_LABEL = ...
    ALERT = ...
    ANIMATION = ...
    ARROW = ...
    CALENDAR = ...
    CANVAS = ...
    CHECK_BOX = ...
    CHECK_MENU_ITEM = ...
    COLOR_CHOOSER = ...
    COLUMN_HEADER = ...
    COMBO_BOX = ...
    DATE_EDITOR = ...
    DESKTOP_ICON = ...
    DESKTOP_FRAME = ...
    DIAL = ...
    DIALOG = ...
    DIRECTORY_PANE = ...
    DRAWING_AREA = ...
    FILE_CHOOSER = ...
    FILLER = ...
    FONT_CHOOSER = ...
    FRAME = ...
    GLASS_PANE = ...
    HTML_CONTAINER = ...
    ICON = ...
    IMAGE = ...
    INTERNAL_FRAME = ...
    LABEL = ...
    LAYERED_PANE = ...
    LIST = ...
    LIST_ITEM = ...
    MENU = ...
    MENU_BAR = ...
    MENU_ITEM = ...
    OPTION_PANE = ...
    PAGE_TAB = ...
    PAGE_TAB_LIST = ...
    PANEL = ...
    PASSWORD_TEXT = ...
    POPUP_MENU = ...
    PROGRESS_BAR = ...
    PUSH_BUTTON = ...
    RADIO_BUTTON = ...
    RADIO_MENU_ITEM = ...
    ROOT_PANE = ...
    ROW_HEADER = ...
    SCROLL_BAR = ...
    SCROLL_PANE = ...
    SEPARATOR = ...
    SLIDER = ...
    SPLIT_PANE = ...
    SPIN_BUTTON = ...
    STATUSBAR = ...
    TABLE = ...
    TABLE_CELL = ...
    TABLE_COLUMN_HEADER = ...
    TABLE_ROW_HEADER = ...
    TEAR_OFF_MENU_ITEM = ...
    TERMINAL = ...
    TEXT = ...
    TOGGLE_BUTTON = ...
    TOOL_BAR = ...
    TOOL_TIP = ...
    TREE = ...
    TREE_TABLE = ...
    UNKNOWN = ...
    VIEWPORT = ...
    WINDOW = ...
    HEADER = ...
    FOOTER = ...
    PARAGRAPH = ...
    RULER = ...
    APPLICATION = ...
    AUTOCOMPLETE = ...
    EDIT_BAR = ...
    EMBEDDED = ...
    ENTRY = ...
    CHART = ...
    CAPTION = ...
    DOCUMENT_FRAME = ...
    HEADING = ...
    PAGE = ...
    SECTION = ...
    REDUNDANT_OBJECT = ...
    FORM = ...
    LINK = ...
    INPUT_METHOD_WINDOW = ...
    TABLE_ROW = ...
    TREE_ITEM = ...
    DOCUMENT_SPREADSHEET = ...
    DOCUMENT_PRESENTATION = ...
    DOCUMENT_TEXT = ...
    DOCUMENT_WEB = ...
    DOCUMENT_EMAIL = ...
    COMMENT = ...
    LIST_BOX = ...
    GROUPING = ...
    IMAGE_MAP = ...
    NOTIFICATION = ...
    INFO_BAR = ...
    LEVEL_BAR = ...
    TITLE_BAR = ...
    BLOCK_QUOTE = ...
    AUDIO = ...
    VIDEO = ...
    DEFINITION = ...
    ARTICLE = ...
    LANDMARK = ...
    LOG = ...
    MARQUEE = ...
    MATH = ...
    RATING = ...
    TIMER = ...
    DESCRIPTION_LIST = ...
    DESCRIPTION_TERM = ...
    DESCRIPTION_VALUE = ...
    STATIC = ...
    MATH_FRACTION = ...
    MATH_ROOT = ...
    SUBSCRIPT = ...
    SUPERSCRIPT = ...
    FOOTNOTE = ...
    CONTENT_DELETION = ...
    CONTENT_INSERTION = ...
    MARK = ...
    SUGGESTION = ...
    LAST_DEFINED = ...
    for_name = ...
    get_localized_name = ...
    get_name = ...
    register = ...

class ScrollType(GObject.GEnum):
    TOP_LEFT = ...
    BOTTOM_RIGHT = ...
    TOP_EDGE = ...
    BOTTOM_EDGE = ...
    LEFT_EDGE = ...
    RIGHT_EDGE = ...
    ANYWHERE = ...

class StateType(GObject.GEnum):
    INVALID = ...
    ACTIVE = ...
    ARMED = ...
    BUSY = ...
    CHECKED = ...
    DEFUNCT = ...
    EDITABLE = ...
    ENABLED = ...
    EXPANDABLE = ...
    EXPANDED = ...
    FOCUSABLE = ...
    FOCUSED = ...
    HORIZONTAL = ...
    ICONIFIED = ...
    MODAL = ...
    MULTI_LINE = ...
    MULTISELECTABLE = ...
    OPAQUE = ...
    PRESSED = ...
    RESIZABLE = ...
    SELECTABLE = ...
    SELECTED = ...
    SENSITIVE = ...
    SHOWING = ...
    SINGLE_LINE = ...
    STALE = ...
    TRANSIENT = ...
    VERTICAL = ...
    VISIBLE = ...
    MANAGES_DESCENDANTS = ...
    INDETERMINATE = ...
    TRUNCATED = ...
    REQUIRED = ...
    INVALID_ENTRY = ...
    SUPPORTS_AUTOCOMPLETION = ...
    SELECTABLE_TEXT = ...
    DEFAULT = ...
    ANIMATED = ...
    VISITED = ...
    CHECKABLE = ...
    HAS_POPUP = ...
    HAS_TOOLTIP = ...
    READ_ONLY = ...
    LAST_DEFINED = ...
    for_name = ...
    get_name = ...
    register = ...

class TextAttribute(GObject.GEnum):
    INVALID = ...
    LEFT_MARGIN = ...
    RIGHT_MARGIN = ...
    INDENT = ...
    INVISIBLE = ...
    EDITABLE = ...
    PIXELS_ABOVE_LINES = ...
    PIXELS_BELOW_LINES = ...
    PIXELS_INSIDE_WRAP = ...
    BG_FULL_HEIGHT = ...
    RISE = ...
    UNDERLINE = ...
    STRIKETHROUGH = ...
    SIZE = ...
    SCALE = ...
    WEIGHT = ...
    LANGUAGE = ...
    FAMILY_NAME = ...
    BG_COLOR = ...
    FG_COLOR = ...
    BG_STIPPLE = ...
    FG_STIPPLE = ...
    WRAP_MODE = ...
    DIRECTION = ...
    JUSTIFICATION = ...
    STRETCH = ...
    VARIANT = ...
    STYLE = ...
    TEXT_POSITION = ...
    LAST_DEFINED = ...
    for_name = ...
    get_name = ...
    get_value = ...
    register = ...

class TextBoundary(GObject.GEnum):
    CHAR = ...
    WORD_START = ...
    WORD_END = ...
    SENTENCE_START = ...
    SENTENCE_END = ...
    LINE_START = ...
    LINE_END = ...

class TextClipType(GObject.GEnum):
    NONE = ...
    MIN = ...
    MAX = ...
    BOTH = ...

class TextGranularity(GObject.GEnum):
    CHAR = ...
    WORD = ...
    SENTENCE = ...
    LINE = ...
    PARAGRAPH = ...

class ValueType(GObject.GEnum):
    VERY_WEAK = ...
    WEAK = ...
    ACCEPTABLE = ...
    STRONG = ...
    VERY_STRONG = ...
    VERY_LOW = ...
    LOW = ...
    MEDIUM = ...
    HIGH = ...
    VERY_HIGH = ...
    VERY_BAD = ...
    BAD = ...
    GOOD = ...
    VERY_GOOD = ...
    BEST = ...
    LAST_DEFINED = ...
    get_localized_name = ...
    get_name = ...
